stages:
- frontend-check
- backend27-safety
- backend27-style
- backend27-tests
- backend36-tests
- master-deploy
- master-test-e2e
- production-deploy

deploy_production:
  stage: production-deploy
  environment:
    name: production
    url: http://mistic2.leloir.org.ar:5001
  variables:
    GIT_STRATEGY: none
  script:
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SSH_PRIVATE_KEY")
  - echo $SSHPASS > sshkey.txt
  - mkdir -p ~/.ssh
  - sshpass -f sshkey.txt $SSH_PROD_TUNNEL "nohup /home/pfamserver/stage/pfamserver/deploy_production.sh &"
  only:
  - production
  tags:
  - production

deploy_master:
  stage: master-deploy
  image: ecolell/mistic-flask-test-server:python2.7.14
  cache:
    paths:
    - pip-cache/
    - node_modules/
    - .cache/
  environment:
    name: staging
    url: https://pfamserver.herokuapp.comn
  variables:
    PIP_CACHE_DIR: "pip-cache"
    NODE_TLS_REJECT_UNAUTHORIZED: 0
  before_script:
    - export SQLALCHEMY_DATABASE_URI=$HEROKU_STAGE_SQLALCHEMY_DATABASE_URI
  script:
  - git remote set-url heroku https://heroku:$HEROKU_API_KEY@git.heroku.com/pfamserver.git
  - git fetch origin master:master
  - git checkout master
  - rm -f .git/hooks/pre-push
  - git push -q heroku master
  - mkdir ~/.pip
  - echo '{"assets":{},"publicPath":""}' > pfamserver/static/manifest.json
  - echo "[global]\nindex-url = http://192.168.101.105:3141/root/pypi/+simple/\ntrusted-host = 192.168.101.105" > ~/.pip/pip.conf
  - pip install -r requirements_development.txt
  - git push -f heroku master
  - flask db upgrade
  - flask data algorithms load
  only:
  - master
  tags:
  - master

protractor_test:
  stage: master-test-e2e
  image: ecolell/mistic-flask-test-server:python2.7.14
  cache:
    paths:
    - pip-cache/
    - node_modules/
    - .cache/
  environment:
    name: staging
    url: https://pfamserver.herokuapp.com
  variables:
    PIP_CACHE_DIR: "pip-cache"
    NODE_TLS_REJECT_UNAUTHORIZED: 0
  script:
  - npm --proxy http://192.168.101.105:8080 --https-proxy http://192.168.101.105:8080 --strict-ssl false install .
  - ./node_modules/protractor/bin/webdriver-manager update && xvfb-run -a npm run test-e2e --headless"
  allow_failure: true
  only:
  - master
  tags:
  - master

services:
  - mysql:8.0.12

frontend:
  stage: frontend-check
  image: ecolell/mistic-flask-test-server:python2.7.14
  cache:
    paths:
    - node_modules/
  environment:
    name: review/$CI_COMMIT_REF_NAME
  script:
  - npm --proxy http://192.168.101.105:8080 --https-proxy http://192.168.101.105:8080 --strict-ssl false install .
  - npm run lint
  - npm run build
  except:
  - production
  - master
  tags:
  - integration

backend27_safety:
  stage: backend27-safety
  image: ecolell/mistic-flask-test-server:python2.7.14
  cache:
    paths:
    - pip-cache/
  environment:
    name: review/$CI_COMMIT_REF_NAME
  variables:
    PIP_CACHE_DIR: "pip-cache"
  script:
  - mkdir ~/.pip
  - echo "[global]\nindex-url = http://192.168.101.105:3141/root/pypi/+simple/\ntrusted-host = 192.168.101.105" > ~/.pip/pip.conf
  - pip install -r requirements_development.txt
  - FLASK_ENV=testing safety check
  except:
  - production
  - master
  tags:
  - integration

backend27_style:
  stage: backend27-style
  image: ecolell/mistic-flask-test-server:python2.7.14
  cache:
    paths:
    - pip-cache/
  environment:
    name: review/$CI_COMMIT_REF_NAME
  variables:
    PIP_CACHE_DIR: "pip-cache"
  script:
  - mkdir ~/.pip
  - echo "[global]\nindex-url = http://192.168.101.105:3141/root/pypi/+simple/\ntrusted-host = 192.168.101.105" > ~/.pip/pip.conf
  - pip install -r requirements_development.txt
  - FLASK_ENV=testing pycodestyle pfamserver tests
  except:
  - production
  - master
  tags:
  - integration

backend27_tests:
  stage: backend27-tests
  image: ecolell/mistic-flask-test-server:python2.7.14
  cache:
    paths:
    - pip-cache/
    - .tox/
  environment:
    name: review/$CI_COMMIT_REF_NAME
  variables:
    PIP_CACHE_DIR: "pip-cache"
    MYSQL_DATABASASE: python2_$CI_COMMIT_SHA
    MYSQL_ROOT_PASSWORD: "root"
    NODE_TLS_REJECT_UNAUTHORIZED: 0
  before_script:
    - export SQLALCHEMY_DATABASE_URI=mysql+pymysql://root:root@mysql:3306/python2_$CI_COMMIT_SHA
  script:
  - mkdir ~/.pip
  - echo $SQLALCHEMY_DATABASE_URI
  - echo '{"assets":{},"publicPath":""}' > pfamserver/static/manifest.json
  - echo "[global]\nindex-url = http://192.168.101.105:3141/root/pypi/+simple/\ntrusted-host = 192.168.101.105" > ~/.pip/pip.conf
  - pip install -r requirements_development.txt
  - FLASK_ENV=testing flask db upgrade
  - FLASK_ENV=testing py.test
  except:
  - production
  - master
  tags:
  - integration

backend36_tests:
  stage: backend36-tests
  image: ecolell/mistic-flask-test-server:python3.6.6
  cache:
    paths:
    - pip-cache/
    - .tox/
  environment:
    name: review/$CI_COMMIT_REF_NAME
  variables:
    PIP_CACHE_DIR: "pip-cache"
    MYSQL_DATABASASE: python3_$CI_COMMIT_SHA
    MYSQL_ROOT_PASSWORD: "root"
    NODE_TLS_REJECT_UNAUTHORIZED: 0
  before_script:
    - export SQLALCHEMY_DATABASE_URI=mysql+pymysql://root:root@mysql:3306/python3_$CI_COMMIT_SHA
  script:
  - mkdir ~/.pip
  - echo $SQLALCHEMY_DATABASE_URI
  - echo '{"assets":{},"publicPath":""}' > pfamserver/static/manifest.json
  - echo "[global]\nindex-url = http://192.168.101.105:3141/root/pypi/+simple/\ntrusted-host = 192.168.101.105" > ~/.pip/pip.conf
  - pip install -r requirements_development.txt
  - FLASK_ENV=testing flask db upgrade
  - FLASK_ENV=testing py.test
  allow_failure: true
  except:
  - production
  - master
  tags:
  - integration
